-- CustomGui.lua
-- Simple Roblox GUI library supporting mobile and multi-select dropdowns
-- Usage: require(path_to_CustomGui)

local CustomGui = {}

function CustomGui:CreateWindow(props)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = props.Name or "CustomWindow"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    -- Main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0.7, 0, 0.7, 0)
    mainFrame.Position = UDim2.new(0.15, 0, 0.15, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(22, 22, 22) -- Carbon black
    mainFrame.BorderSizePixel = 0
    mainFrame.BackgroundTransparency = 0.05
    mainFrame.Parent = screenGui
    mainFrame.ClipsDescendants = true
    mainFrame.AnchorPoint = Vector2.new(0,0)
    mainFrame.ZIndex = 1

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 18)
    uiCorner.Parent = mainFrame

    -- Top bar (draggable, closable)
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1, 0, 0, 36)
    topBar.Position = UDim2.new(0, 0, 0, 0)
    topBar.BackgroundColor3 = Color3.fromRGB(32, 32, 32) -- Carbon gray
    topBar.Parent = mainFrame
    local topCorner = Instance.new("UICorner")
    topCorner.CornerRadius = UDim.new(0, 18)
    topCorner.Parent = topBar

    local title = Instance.new("TextLabel")
    title.Text = props.Name or "CustomWindow"
    title.Size = UDim2.new(1, -80, 1, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.fromRGB(220,220,220)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.Parent = topBar
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextWrapped = true

    local closeBtn = Instance.new("TextButton")
    closeBtn.Text = "❌"
    closeBtn.Size = UDim2.new(0, 36, 1, 0)
    closeBtn.Position = UDim2.new(1, -36, 0, 0)
    closeBtn.BackgroundTransparency = 1
    closeBtn.TextColor3 = Color3.fromRGB(255,0,0)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 28
    closeBtn.Parent = topBar
    closeBtn.ZIndex = 2

    -- Minimize button
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Text = "_"
    minimizeBtn.Size = UDim2.new(0, 36, 1, 0)
    minimizeBtn.Position = UDim2.new(1, -72, 0, 0)
    minimizeBtn.BackgroundTransparency = 1
    minimizeBtn.TextColor3 = Color3.fromRGB(180,180,180)
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.TextSize = 24
    minimizeBtn.Parent = topBar
    minimizeBtn.ZIndex = 2

    -- Floating reopen button
    local reopenBtn = Instance.new("TextButton")
    reopenBtn.Text = "☰"
    reopenBtn.Size = UDim2.new(0, 44, 0, 44)
    reopenBtn.Position = UDim2.new(0, 14, 0, 14)
    reopenBtn.BackgroundColor3 = Color3.fromRGB(32,32,32)
    reopenBtn.TextColor3 = Color3.fromRGB(255,255,255)
    reopenBtn.Font = Enum.Font.GothamBold
    reopenBtn.TextSize = 28
    reopenBtn.Visible = false
    reopenBtn.Parent = screenGui
    local reopenCorner = Instance.new("UICorner")
    reopenCorner.CornerRadius = UDim.new(0, 14)
    reopenCorner.Parent = reopenBtn

    closeBtn.MouseButton1Click:Connect(function()
        -- Stop all running threads (best effort)
        for _, t in ipairs(getgc(true)) do
            if typeof(t) == "thread" and coroutine.status(t) == "suspended" then
                coroutine.close(t)
            end
        end
        screenGui:Destroy()
    end)
    minimizeBtn.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        reopenBtn.Visible = true
    end)
    reopenBtn.MouseButton1Click:Connect(function()
        mainFrame.Visible = true
        reopenBtn.Visible = false
    end)

    -- Dragging logic
    local dragging, dragInput, dragStart, startPos
    topBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    topBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    topBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    -- Tab bar
    local tabBar = Instance.new("Frame")
    tabBar.Name = "TabBar"
    tabBar.Size = UDim2.new(1, 0, 0, 38)
    tabBar.Position = UDim2.new(0, 0, 0, 40)
    tabBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tabBar.Parent = mainFrame
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 12)
    tabCorner.Parent = tabBar

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Parent = tabBar
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0, 8)
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Tabs storage
    local tabs = {}
    local tabContents = {}
    local activeTab = nil

    function CustomGui:MakeTab(tabProps)
        local tabBtn = Instance.new("TextButton")
        tabBtn.Text = tabProps.Name or "Tab"
        tabBtn.Size = UDim2.new(0, 120, 1, -8)
        tabBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        tabBtn.TextColor3 = Color3.fromRGB(220,220,220)
        tabBtn.Font = Enum.Font.GothamBold
        tabBtn.TextSize = 18
        tabBtn.Parent = tabBar
        tabBtn.AutoButtonColor = true
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 8)
        btnCorner.Parent = tabBtn

        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = tabProps.Name .. "_Content"
        tabContent.Size = UDim2.new(1, 0, 1, -78)
        tabContent.Position = UDim2.new(0, 0, 0, 78)
        tabContent.CanvasSize = UDim2.new(0, 0, 0, 800)
        tabContent.ScrollBarThickness = 10
        tabContent.BackgroundTransparency = 1
        tabContent.Parent = mainFrame
        tabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
        tabContent.ScrollingDirection = Enum.ScrollingDirection.Y
        tabContent.Visible = false

        local layout = Instance.new("UIListLayout")
        layout.Parent = tabContent
        layout.Padding = UDim.new(0, 18)
        layout.SortOrder = Enum.SortOrder.LayoutOrder

        tabs[#tabs+1] = tabBtn
        tabContents[#tabContents+1] = tabContent

        tabBtn.MouseButton1Click:Connect(function()
            for i, t in ipairs(tabContents) do
                t.Visible = false
                tabs[i].BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            end
            tabContent.Visible = true
            tabBtn.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
            activeTab = tabContent
        end)

        if #tabs == 1 then
            tabBtn.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
            tabContent.Visible = true
            activeTab = tabContent
        end

        return tabContent
    end

    -- Return window object with tab creation
    local windowObj = {}
    function windowObj:MakeTab(tabProps)
        return CustomGui:MakeTab(tabProps)
    end
    return windowObj
end

function CustomGui:CreateTab(parent, props)
    -- Just return parent (scroll) for simplicity, all controls go in scroll
    return parent
end

function CustomGui:AddSection(parent, props)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(0.98, 0, 0, 44)
    section.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    section.BackgroundTransparency = 0.15
    section.Parent = parent
    section.LayoutOrder = parent:GetChildren() and #parent:GetChildren() or 1
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = section
    local label = Instance.new("TextLabel")
    label.Text = props.Name or "Section"
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 24
    label.Parent = section
    label.AnchorPoint = Vector2.new(0.5,0.5)
    label.Position = UDim2.new(0.5,0,0.5,0)
    return section
end

function CustomGui:AddLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Text = text
    label.Size = UDim2.new(0.98, 0, 0, 28)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200,200,200)
    label.Font = Enum.Font.Gotham
    label.TextSize = 18
    label.Parent = parent
    label.LayoutOrder = parent:GetChildren() and #parent:GetChildren() or 1
    return label
end

function CustomGui:AddToggle(parent, props)
    local button = Instance.new("TextButton")
    button.Text = props.Name or "Toggle"
    button.Size = UDim2.new(0.98, 0, 0, 36)
    button.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
    button.TextColor3 = Color3.fromRGB(255,255,255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 20
    button.Parent = parent
    button.LayoutOrder = parent:GetChildren() and #parent:GetChildren() or 1
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = button
    local state = props.Default or false
    button.MouseButton1Click:Connect(function()
        state = not state
        button.BackgroundColor3 = state and Color3.fromRGB(60, 180, 75) or Color3.fromRGB(180, 60, 60)
        if props.Callback then props.Callback(state) end
    end)
    return button
end

function CustomGui:AddSlider(parent, props)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0.98, 0, 0, 44)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = parent
    sliderFrame.LayoutOrder = parent:GetChildren() and #parent:GetChildren() or 1

    local label = Instance.new("TextLabel")
    label.Text = props.Name .. ": " .. tostring(props.Default or props.Min)
    label.Size = UDim2.new(1, 0, 0, 18)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200,200,200)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.Parent = sliderFrame

    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(0.92, 0, 0, 8)
    bar.Position = UDim2.new(0.04, 0, 0, 26)
    bar.BackgroundColor3 = Color3.fromRGB(60,60,60)
    bar.Parent = sliderFrame
    local barCorner = Instance.new("UICorner")
    barCorner.CornerRadius = UDim.new(0, 4)
    barCorner.Parent = bar

    local thumb = Instance.new("Frame")
    thumb.Size = UDim2.new(0, 18, 0, 18)
    thumb.Position = UDim2.new(0, 0, 0, -5)
    thumb.BackgroundColor3 = Color3.fromRGB(100,100,255)
    thumb.Parent = bar
    local thumbCorner = Instance.new("UICorner")
    thumbCorner.CornerRadius = UDim.new(0, 9)
    thumbCorner.Parent = thumb

    local value = props.Default or props.Min
    local min, max = props.Min, props.Max
    local dragging = false

    local function setValue(newValue)
        value = math.clamp(newValue, min, max)
        local percent = (value - min) / (max - min)
        thumb.Position = UDim2.new(percent, -9, 0, -5)
        label.Text = props.Name .. ": " .. string.format("%.2f", value)
        if props.Callback then props.Callback(value) end
    end
    setValue(value)

    thumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)
    thumb.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            local x = input.Position.X - bar.AbsolutePosition.X
            local percent = math.clamp(x / bar.AbsoluteSize.X, 0, 1)
            setValue(min + percent * (max - min))
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local x = input.Position.X - bar.AbsolutePosition.X
            local percent = math.clamp(x / bar.AbsoluteSize.X, 0, 1)
            setValue(min + percent * (max - min))
        end
    end)

    return sliderFrame
end

function CustomGui:AddMultiDropdown(parent, props)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.98, 0, 0, 44 + 32 * #props.Options)
    frame.BackgroundColor3 = Color3.fromRGB(38,38,38)
    frame.BackgroundTransparency = 0.18
    frame.Parent = parent
    frame.LayoutOrder = parent:GetChildren() and #parent:GetChildren() or 1
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = frame
    local label = Instance.new("TextLabel")
    label.Text = props.Name or "Dropdown"
    label.Size = UDim2.new(1, 0, 0, 28)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 18
    label.Parent = frame
    local selected = {}
    for i, option in ipairs(props.Options) do
        local optBtn = Instance.new("TextButton")
        optBtn.Text = option
        optBtn.Size = UDim2.new(0.96, 0, 0, 28)
        optBtn.Position = UDim2.new(0.02, 0, 0, 28 + 32 * (i-1))
        optBtn.BackgroundColor3 = Color3.fromRGB(80,80,80)
        optBtn.TextColor3 = Color3.fromRGB(255,255,255)
        optBtn.Font = Enum.Font.Gotham
        optBtn.TextSize = 16
        optBtn.Parent = frame
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 6)
        btnCorner.Parent = optBtn
        optBtn.MouseButton1Click:Connect(function()
            if table.find(selected, option) then
                for idx, val in ipairs(selected) do
                    if val == option then table.remove(selected, idx) break end
                end
                optBtn.BackgroundColor3 = Color3.fromRGB(80,80,80)
            else
                table.insert(selected, option)
                optBtn.BackgroundColor3 = Color3.fromRGB(60,180,75)
            end
            if props.Callback then props.Callback(selected) end
        end)
    end
    return frame
end

return CustomGui
